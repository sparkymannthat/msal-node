import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Tasks } from "../operationsInterfaces";
import { ContainerRegistryManagementClient } from "../containerRegistryManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Task, TasksListOptionalParams, TasksGetOptionalParams, TasksGetResponse, TasksCreateOptionalParams, TasksCreateResponse, TasksDeleteOptionalParams, TaskUpdateParameters, TasksUpdateOptionalParams, TasksUpdateResponse, TasksGetDetailsOptionalParams, TasksGetDetailsResponse } from "../models";
/** Class containing Tasks operations. */
export declare class TasksImpl implements Tasks {
    private readonly client;
    /**
     * Initialize a new instance of the class Tasks class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerRegistryManagementClient);
    /**
     * Lists all the tasks for a specified container registry.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, registryName: string, options?: TasksListOptionalParams): PagedAsyncIterableIterator<Task>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all the tasks for a specified container registry.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get the properties of a specified task.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param taskName The name of the container registry task.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, registryName: string, taskName: string, options?: TasksGetOptionalParams): Promise<TasksGetResponse>;
    /**
     * Creates a task for a container registry with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param taskName The name of the container registry task.
     * @param taskCreateParameters The parameters for creating a task.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, registryName: string, taskName: string, taskCreateParameters: Task, options?: TasksCreateOptionalParams): Promise<PollerLike<PollOperationState<TasksCreateResponse>, TasksCreateResponse>>;
    /**
     * Creates a task for a container registry with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param taskName The name of the container registry task.
     * @param taskCreateParameters The parameters for creating a task.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, registryName: string, taskName: string, taskCreateParameters: Task, options?: TasksCreateOptionalParams): Promise<TasksCreateResponse>;
    /**
     * Deletes a specified task.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param taskName The name of the container registry task.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, registryName: string, taskName: string, options?: TasksDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a specified task.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param taskName The name of the container registry task.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, registryName: string, taskName: string, options?: TasksDeleteOptionalParams): Promise<void>;
    /**
     * Updates a task with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param taskName The name of the container registry task.
     * @param taskUpdateParameters The parameters for updating a task.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, registryName: string, taskName: string, taskUpdateParameters: TaskUpdateParameters, options?: TasksUpdateOptionalParams): Promise<PollerLike<PollOperationState<TasksUpdateResponse>, TasksUpdateResponse>>;
    /**
     * Updates a task with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param taskName The name of the container registry task.
     * @param taskUpdateParameters The parameters for updating a task.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, registryName: string, taskName: string, taskUpdateParameters: TaskUpdateParameters, options?: TasksUpdateOptionalParams): Promise<TasksUpdateResponse>;
    /**
     * Returns a task with extended information that includes all secrets.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param taskName The name of the container registry task.
     * @param options The options parameters.
     */
    getDetails(resourceGroupName: string, registryName: string, taskName: string, options?: TasksGetDetailsOptionalParams): Promise<TasksGetDetailsResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=tasks.d.ts.map