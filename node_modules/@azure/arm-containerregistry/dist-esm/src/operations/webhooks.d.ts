import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Webhooks } from "../operationsInterfaces";
import { ContainerRegistryManagementClient } from "../containerRegistryManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Webhook, WebhooksListOptionalParams, Event, WebhooksListEventsOptionalParams, WebhooksGetOptionalParams, WebhooksGetResponse, WebhookCreateParameters, WebhooksCreateOptionalParams, WebhooksCreateResponse, WebhooksDeleteOptionalParams, WebhookUpdateParameters, WebhooksUpdateOptionalParams, WebhooksUpdateResponse, WebhooksPingOptionalParams, WebhooksPingResponse, WebhooksGetCallbackConfigOptionalParams, WebhooksGetCallbackConfigResponse } from "../models";
/** Class containing Webhooks operations. */
export declare class WebhooksImpl implements Webhooks {
    private readonly client;
    /**
     * Initialize a new instance of the class Webhooks class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerRegistryManagementClient);
    /**
     * Lists all the webhooks for the specified container registry.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, registryName: string, options?: WebhooksListOptionalParams): PagedAsyncIterableIterator<Webhook>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists recent events for the specified webhook.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param options The options parameters.
     */
    listEvents(resourceGroupName: string, registryName: string, webhookName: string, options?: WebhooksListEventsOptionalParams): PagedAsyncIterableIterator<Event>;
    private listEventsPagingPage;
    private listEventsPagingAll;
    /**
     * Lists all the webhooks for the specified container registry.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets the properties of the specified webhook.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, registryName: string, webhookName: string, options?: WebhooksGetOptionalParams): Promise<WebhooksGetResponse>;
    /**
     * Creates a webhook for a container registry with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param webhookCreateParameters The parameters for creating a webhook.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, registryName: string, webhookName: string, webhookCreateParameters: WebhookCreateParameters, options?: WebhooksCreateOptionalParams): Promise<PollerLike<PollOperationState<WebhooksCreateResponse>, WebhooksCreateResponse>>;
    /**
     * Creates a webhook for a container registry with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param webhookCreateParameters The parameters for creating a webhook.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, registryName: string, webhookName: string, webhookCreateParameters: WebhookCreateParameters, options?: WebhooksCreateOptionalParams): Promise<WebhooksCreateResponse>;
    /**
     * Deletes a webhook from a container registry.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, registryName: string, webhookName: string, options?: WebhooksDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a webhook from a container registry.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, registryName: string, webhookName: string, options?: WebhooksDeleteOptionalParams): Promise<void>;
    /**
     * Updates a webhook with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param webhookUpdateParameters The parameters for updating a webhook.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, registryName: string, webhookName: string, webhookUpdateParameters: WebhookUpdateParameters, options?: WebhooksUpdateOptionalParams): Promise<PollerLike<PollOperationState<WebhooksUpdateResponse>, WebhooksUpdateResponse>>;
    /**
     * Updates a webhook with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param webhookUpdateParameters The parameters for updating a webhook.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, registryName: string, webhookName: string, webhookUpdateParameters: WebhookUpdateParameters, options?: WebhooksUpdateOptionalParams): Promise<WebhooksUpdateResponse>;
    /**
     * Triggers a ping event to be sent to the webhook.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param options The options parameters.
     */
    ping(resourceGroupName: string, registryName: string, webhookName: string, options?: WebhooksPingOptionalParams): Promise<WebhooksPingResponse>;
    /**
     * Lists recent events for the specified webhook.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param options The options parameters.
     */
    private _listEvents;
    /**
     * Gets the configuration of service URI and custom headers for the webhook.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param options The options parameters.
     */
    getCallbackConfig(resourceGroupName: string, registryName: string, webhookName: string, options?: WebhooksGetCallbackConfigOptionalParams): Promise<WebhooksGetCallbackConfigResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListEventsNext
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param webhookName The name of the webhook.
     * @param nextLink The nextLink from the previous successful call to the ListEvents method.
     * @param options The options parameters.
     */
    private _listEventsNext;
}
//# sourceMappingURL=webhooks.d.ts.map