import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Replications } from "../operationsInterfaces";
import { ContainerRegistryManagementClient } from "../containerRegistryManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Replication, ReplicationsListOptionalParams, ReplicationsGetOptionalParams, ReplicationsGetResponse, ReplicationsCreateOptionalParams, ReplicationsCreateResponse, ReplicationsDeleteOptionalParams, ReplicationUpdateParameters, ReplicationsUpdateOptionalParams, ReplicationsUpdateResponse } from "../models";
/** Class containing Replications operations. */
export declare class ReplicationsImpl implements Replications {
    private readonly client;
    /**
     * Initialize a new instance of the class Replications class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerRegistryManagementClient);
    /**
     * Lists all the replications for the specified container registry.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, registryName: string, options?: ReplicationsListOptionalParams): PagedAsyncIterableIterator<Replication>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all the replications for the specified container registry.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets the properties of the specified replication.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param replicationName The name of the replication.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, registryName: string, replicationName: string, options?: ReplicationsGetOptionalParams): Promise<ReplicationsGetResponse>;
    /**
     * Creates a replication for a container registry with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param replicationName The name of the replication.
     * @param replication The parameters for creating a replication.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, registryName: string, replicationName: string, replication: Replication, options?: ReplicationsCreateOptionalParams): Promise<PollerLike<PollOperationState<ReplicationsCreateResponse>, ReplicationsCreateResponse>>;
    /**
     * Creates a replication for a container registry with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param replicationName The name of the replication.
     * @param replication The parameters for creating a replication.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, registryName: string, replicationName: string, replication: Replication, options?: ReplicationsCreateOptionalParams): Promise<ReplicationsCreateResponse>;
    /**
     * Deletes a replication from a container registry.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param replicationName The name of the replication.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, registryName: string, replicationName: string, options?: ReplicationsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a replication from a container registry.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param replicationName The name of the replication.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, registryName: string, replicationName: string, options?: ReplicationsDeleteOptionalParams): Promise<void>;
    /**
     * Updates a replication for a container registry with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param replicationName The name of the replication.
     * @param replicationUpdateParameters The parameters for updating a replication.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, registryName: string, replicationName: string, replicationUpdateParameters: ReplicationUpdateParameters, options?: ReplicationsUpdateOptionalParams): Promise<PollerLike<PollOperationState<ReplicationsUpdateResponse>, ReplicationsUpdateResponse>>;
    /**
     * Updates a replication for a container registry with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param replicationName The name of the replication.
     * @param replicationUpdateParameters The parameters for updating a replication.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, registryName: string, replicationName: string, replicationUpdateParameters: ReplicationUpdateParameters, options?: ReplicationsUpdateOptionalParams): Promise<ReplicationsUpdateResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=replications.d.ts.map