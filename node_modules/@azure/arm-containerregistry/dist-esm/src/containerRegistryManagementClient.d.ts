import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Registries, Operations, PrivateEndpointConnections, Replications, Webhooks, AgentPools, Runs, TaskRuns, Tasks } from "./operationsInterfaces";
import { ContainerRegistryManagementClientOptionalParams } from "./models";
export declare class ContainerRegistryManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the ContainerRegistryManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The Microsoft Azure subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: ContainerRegistryManagementClientOptionalParams);
    registries: Registries;
    operations: Operations;
    privateEndpointConnections: PrivateEndpointConnections;
    replications: Replications;
    webhooks: Webhooks;
    agentPools: AgentPools;
    runs: Runs;
    taskRuns: TaskRuns;
    tasks: Tasks;
}
//# sourceMappingURL=containerRegistryManagementClient.d.ts.map