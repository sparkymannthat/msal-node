{"version":3,"file":"containerRegistry.js","sourceRoot":"","sources":["../../../../src/generated/operationsInterfaces/containerRegistry.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  ContainerRegistryCheckDockerV2SupportOptionalParams,\n  ContainerRegistryGetManifestOptionalParams,\n  ContainerRegistryGetManifestResponse,\n  Manifest,\n  ContainerRegistryCreateManifestOptionalParams,\n  ContainerRegistryCreateManifestResponse,\n  ContainerRegistryDeleteManifestOptionalParams,\n  ContainerRegistryGetRepositoriesOptionalParams,\n  ContainerRegistryGetRepositoriesResponse,\n  ContainerRegistryGetPropertiesOptionalParams,\n  ContainerRegistryGetPropertiesResponse,\n  ContainerRegistryDeleteRepositoryOptionalParams,\n  ContainerRegistryUpdatePropertiesOptionalParams,\n  ContainerRegistryUpdatePropertiesResponse,\n  ContainerRegistryGetTagsOptionalParams,\n  ContainerRegistryGetTagsResponse,\n  ContainerRegistryGetTagPropertiesOptionalParams,\n  ContainerRegistryGetTagPropertiesResponse,\n  ContainerRegistryUpdateTagAttributesOptionalParams,\n  ContainerRegistryUpdateTagAttributesResponse,\n  ContainerRegistryDeleteTagOptionalParams,\n  ContainerRegistryGetManifestsOptionalParams,\n  ContainerRegistryGetManifestsResponse,\n  ContainerRegistryGetManifestPropertiesOptionalParams,\n  ContainerRegistryGetManifestPropertiesResponse,\n  ContainerRegistryUpdateManifestPropertiesOptionalParams,\n  ContainerRegistryUpdateManifestPropertiesResponse,\n  ContainerRegistryGetRepositoriesNextOptionalParams,\n  ContainerRegistryGetRepositoriesNextResponse,\n  ContainerRegistryGetTagsNextOptionalParams,\n  ContainerRegistryGetTagsNextResponse,\n  ContainerRegistryGetManifestsNextOptionalParams,\n  ContainerRegistryGetManifestsNextResponse\n} from \"../models\";\n\n/** Interface representing a ContainerRegistry. */\nexport interface ContainerRegistry {\n  /**\n   * Tells whether this Docker Registry instance supports Docker Registry HTTP API v2\n   * @param options The options parameters.\n   */\n  checkDockerV2Support(\n    options?: ContainerRegistryCheckDockerV2SupportOptionalParams\n  ): Promise<void>;\n  /**\n   * Get the manifest identified by `name` and `reference` where `reference` can be a tag or digest.\n   * @param name Name of the image (including the namespace)\n   * @param reference A tag or a digest, pointing to a specific image\n   * @param options The options parameters.\n   */\n  getManifest(\n    name: string,\n    reference: string,\n    options?: ContainerRegistryGetManifestOptionalParams\n  ): Promise<ContainerRegistryGetManifestResponse>;\n  /**\n   * Put the manifest identified by `name` and `reference` where `reference` can be a tag or digest.\n   * @param name Name of the image (including the namespace)\n   * @param reference A tag or a digest, pointing to a specific image\n   * @param payload Manifest body, can take v1 or v2 values depending on accept header\n   * @param options The options parameters.\n   */\n  createManifest(\n    name: string,\n    reference: string,\n    payload: Manifest,\n    options?: ContainerRegistryCreateManifestOptionalParams\n  ): Promise<ContainerRegistryCreateManifestResponse>;\n  /**\n   * Delete the manifest identified by `name` and `reference`. Note that a manifest can _only_ be deleted\n   * by `digest`.\n   * @param name Name of the image (including the namespace)\n   * @param reference Digest of a BLOB\n   * @param options The options parameters.\n   */\n  deleteManifest(\n    name: string,\n    reference: string,\n    options?: ContainerRegistryDeleteManifestOptionalParams\n  ): Promise<void>;\n  /**\n   * List repositories\n   * @param options The options parameters.\n   */\n  getRepositories(\n    options?: ContainerRegistryGetRepositoriesOptionalParams\n  ): Promise<ContainerRegistryGetRepositoriesResponse>;\n  /**\n   * Get repository attributes\n   * @param name Name of the image (including the namespace)\n   * @param options The options parameters.\n   */\n  getProperties(\n    name: string,\n    options?: ContainerRegistryGetPropertiesOptionalParams\n  ): Promise<ContainerRegistryGetPropertiesResponse>;\n  /**\n   * Delete the repository identified by `name`\n   * @param name Name of the image (including the namespace)\n   * @param options The options parameters.\n   */\n  deleteRepository(\n    name: string,\n    options?: ContainerRegistryDeleteRepositoryOptionalParams\n  ): Promise<void>;\n  /**\n   * Update the attribute identified by `name` where `reference` is the name of the repository.\n   * @param name Name of the image (including the namespace)\n   * @param options The options parameters.\n   */\n  updateProperties(\n    name: string,\n    options?: ContainerRegistryUpdatePropertiesOptionalParams\n  ): Promise<ContainerRegistryUpdatePropertiesResponse>;\n  /**\n   * List tags of a repository\n   * @param name Name of the image (including the namespace)\n   * @param options The options parameters.\n   */\n  getTags(\n    name: string,\n    options?: ContainerRegistryGetTagsOptionalParams\n  ): Promise<ContainerRegistryGetTagsResponse>;\n  /**\n   * Get tag attributes by tag\n   * @param name Name of the image (including the namespace)\n   * @param reference Tag name\n   * @param options The options parameters.\n   */\n  getTagProperties(\n    name: string,\n    reference: string,\n    options?: ContainerRegistryGetTagPropertiesOptionalParams\n  ): Promise<ContainerRegistryGetTagPropertiesResponse>;\n  /**\n   * Update tag attributes\n   * @param name Name of the image (including the namespace)\n   * @param reference Tag name\n   * @param options The options parameters.\n   */\n  updateTagAttributes(\n    name: string,\n    reference: string,\n    options?: ContainerRegistryUpdateTagAttributesOptionalParams\n  ): Promise<ContainerRegistryUpdateTagAttributesResponse>;\n  /**\n   * Delete tag\n   * @param name Name of the image (including the namespace)\n   * @param reference Tag name\n   * @param options The options parameters.\n   */\n  deleteTag(\n    name: string,\n    reference: string,\n    options?: ContainerRegistryDeleteTagOptionalParams\n  ): Promise<void>;\n  /**\n   * List manifests of a repository\n   * @param name Name of the image (including the namespace)\n   * @param options The options parameters.\n   */\n  getManifests(\n    name: string,\n    options?: ContainerRegistryGetManifestsOptionalParams\n  ): Promise<ContainerRegistryGetManifestsResponse>;\n  /**\n   * Get manifest attributes\n   * @param name Name of the image (including the namespace)\n   * @param digest Digest of a BLOB\n   * @param options The options parameters.\n   */\n  getManifestProperties(\n    name: string,\n    digest: string,\n    options?: ContainerRegistryGetManifestPropertiesOptionalParams\n  ): Promise<ContainerRegistryGetManifestPropertiesResponse>;\n  /**\n   * Update properties of a manifest\n   * @param name Name of the image (including the namespace)\n   * @param digest Digest of a BLOB\n   * @param options The options parameters.\n   */\n  updateManifestProperties(\n    name: string,\n    digest: string,\n    options?: ContainerRegistryUpdateManifestPropertiesOptionalParams\n  ): Promise<ContainerRegistryUpdateManifestPropertiesResponse>;\n  /**\n   * GetRepositoriesNext\n   * @param nextLink The nextLink from the previous successful call to the GetRepositories method.\n   * @param options The options parameters.\n   */\n  getRepositoriesNext(\n    nextLink: string,\n    options?: ContainerRegistryGetRepositoriesNextOptionalParams\n  ): Promise<ContainerRegistryGetRepositoriesNextResponse>;\n  /**\n   * GetTagsNext\n   * @param name Name of the image (including the namespace)\n   * @param nextLink The nextLink from the previous successful call to the GetTags method.\n   * @param options The options parameters.\n   */\n  getTagsNext(\n    name: string,\n    nextLink: string,\n    options?: ContainerRegistryGetTagsNextOptionalParams\n  ): Promise<ContainerRegistryGetTagsNextResponse>;\n  /**\n   * GetManifestsNext\n   * @param name Name of the image (including the namespace)\n   * @param nextLink The nextLink from the previous successful call to the GetManifests method.\n   * @param options The options parameters.\n   */\n  getManifestsNext(\n    name: string,\n    nextLink: string,\n    options?: ContainerRegistryGetManifestsNextOptionalParams\n  ): Promise<ContainerRegistryGetManifestsNextResponse>;\n}\n"]}