{"version":3,"file":"containerRegistry.js","sourceRoot":"","sources":["../../../../src/generated/operations/containerRegistry.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ContainerRegistry } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { GeneratedClientContext } from \"../generatedClientContext\";\nimport {\n  ContainerRegistryCheckDockerV2SupportOptionalParams,\n  ContainerRegistryGetManifestOptionalParams,\n  ContainerRegistryGetManifestResponse,\n  Manifest,\n  ContainerRegistryCreateManifestOptionalParams,\n  ContainerRegistryCreateManifestResponse,\n  ContainerRegistryDeleteManifestOptionalParams,\n  ContainerRegistryGetRepositoriesOptionalParams,\n  ContainerRegistryGetRepositoriesResponse,\n  ContainerRegistryGetPropertiesOptionalParams,\n  ContainerRegistryGetPropertiesResponse,\n  ContainerRegistryDeleteRepositoryOptionalParams,\n  ContainerRegistryUpdatePropertiesOptionalParams,\n  ContainerRegistryUpdatePropertiesResponse,\n  ContainerRegistryGetTagsOptionalParams,\n  ContainerRegistryGetTagsResponse,\n  ContainerRegistryGetTagPropertiesOptionalParams,\n  ContainerRegistryGetTagPropertiesResponse,\n  ContainerRegistryUpdateTagAttributesOptionalParams,\n  ContainerRegistryUpdateTagAttributesResponse,\n  ContainerRegistryDeleteTagOptionalParams,\n  ContainerRegistryGetManifestsOptionalParams,\n  ContainerRegistryGetManifestsResponse,\n  ContainerRegistryGetManifestPropertiesOptionalParams,\n  ContainerRegistryGetManifestPropertiesResponse,\n  ContainerRegistryUpdateManifestPropertiesOptionalParams,\n  ContainerRegistryUpdateManifestPropertiesResponse,\n  ContainerRegistryGetRepositoriesNextOptionalParams,\n  ContainerRegistryGetRepositoriesNextResponse,\n  ContainerRegistryGetTagsNextOptionalParams,\n  ContainerRegistryGetTagsNextResponse,\n  ContainerRegistryGetManifestsNextOptionalParams,\n  ContainerRegistryGetManifestsNextResponse\n} from \"../models\";\n\n/** Class containing ContainerRegistry operations. */\nexport class ContainerRegistryImpl implements ContainerRegistry {\n  private readonly client: GeneratedClientContext;\n\n  /**\n   * Initialize a new instance of the class ContainerRegistry class.\n   * @param client Reference to the service client\n   */\n  constructor(client: GeneratedClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Tells whether this Docker Registry instance supports Docker Registry HTTP API v2\n   * @param options The options parameters.\n   */\n  checkDockerV2Support(\n    options?: ContainerRegistryCheckDockerV2SupportOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { options },\n      checkDockerV2SupportOperationSpec\n    );\n  }\n\n  /**\n   * Get the manifest identified by `name` and `reference` where `reference` can be a tag or digest.\n   * @param name Name of the image (including the namespace)\n   * @param reference A tag or a digest, pointing to a specific image\n   * @param options The options parameters.\n   */\n  getManifest(\n    name: string,\n    reference: string,\n    options?: ContainerRegistryGetManifestOptionalParams\n  ): Promise<ContainerRegistryGetManifestResponse> {\n    return this.client.sendOperationRequest(\n      { name, reference, options },\n      getManifestOperationSpec\n    );\n  }\n\n  /**\n   * Put the manifest identified by `name` and `reference` where `reference` can be a tag or digest.\n   * @param name Name of the image (including the namespace)\n   * @param reference A tag or a digest, pointing to a specific image\n   * @param payload Manifest body, can take v1 or v2 values depending on accept header\n   * @param options The options parameters.\n   */\n  createManifest(\n    name: string,\n    reference: string,\n    payload: Manifest,\n    options?: ContainerRegistryCreateManifestOptionalParams\n  ): Promise<ContainerRegistryCreateManifestResponse> {\n    return this.client.sendOperationRequest(\n      { name, reference, payload, options },\n      createManifestOperationSpec\n    );\n  }\n\n  /**\n   * Delete the manifest identified by `name` and `reference`. Note that a manifest can _only_ be deleted\n   * by `digest`.\n   * @param name Name of the image (including the namespace)\n   * @param reference Digest of a BLOB\n   * @param options The options parameters.\n   */\n  deleteManifest(\n    name: string,\n    reference: string,\n    options?: ContainerRegistryDeleteManifestOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { name, reference, options },\n      deleteManifestOperationSpec\n    );\n  }\n\n  /**\n   * List repositories\n   * @param options The options parameters.\n   */\n  getRepositories(\n    options?: ContainerRegistryGetRepositoriesOptionalParams\n  ): Promise<ContainerRegistryGetRepositoriesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getRepositoriesOperationSpec\n    );\n  }\n\n  /**\n   * Get repository attributes\n   * @param name Name of the image (including the namespace)\n   * @param options The options parameters.\n   */\n  getProperties(\n    name: string,\n    options?: ContainerRegistryGetPropertiesOptionalParams\n  ): Promise<ContainerRegistryGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { name, options },\n      getPropertiesOperationSpec\n    );\n  }\n\n  /**\n   * Delete the repository identified by `name`\n   * @param name Name of the image (including the namespace)\n   * @param options The options parameters.\n   */\n  deleteRepository(\n    name: string,\n    options?: ContainerRegistryDeleteRepositoryOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { name, options },\n      deleteRepositoryOperationSpec\n    );\n  }\n\n  /**\n   * Update the attribute identified by `name` where `reference` is the name of the repository.\n   * @param name Name of the image (including the namespace)\n   * @param options The options parameters.\n   */\n  updateProperties(\n    name: string,\n    options?: ContainerRegistryUpdatePropertiesOptionalParams\n  ): Promise<ContainerRegistryUpdatePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { name, options },\n      updatePropertiesOperationSpec\n    );\n  }\n\n  /**\n   * List tags of a repository\n   * @param name Name of the image (including the namespace)\n   * @param options The options parameters.\n   */\n  getTags(\n    name: string,\n    options?: ContainerRegistryGetTagsOptionalParams\n  ): Promise<ContainerRegistryGetTagsResponse> {\n    return this.client.sendOperationRequest(\n      { name, options },\n      getTagsOperationSpec\n    );\n  }\n\n  /**\n   * Get tag attributes by tag\n   * @param name Name of the image (including the namespace)\n   * @param reference Tag name\n   * @param options The options parameters.\n   */\n  getTagProperties(\n    name: string,\n    reference: string,\n    options?: ContainerRegistryGetTagPropertiesOptionalParams\n  ): Promise<ContainerRegistryGetTagPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { name, reference, options },\n      getTagPropertiesOperationSpec\n    );\n  }\n\n  /**\n   * Update tag attributes\n   * @param name Name of the image (including the namespace)\n   * @param reference Tag name\n   * @param options The options parameters.\n   */\n  updateTagAttributes(\n    name: string,\n    reference: string,\n    options?: ContainerRegistryUpdateTagAttributesOptionalParams\n  ): Promise<ContainerRegistryUpdateTagAttributesResponse> {\n    return this.client.sendOperationRequest(\n      { name, reference, options },\n      updateTagAttributesOperationSpec\n    );\n  }\n\n  /**\n   * Delete tag\n   * @param name Name of the image (including the namespace)\n   * @param reference Tag name\n   * @param options The options parameters.\n   */\n  deleteTag(\n    name: string,\n    reference: string,\n    options?: ContainerRegistryDeleteTagOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { name, reference, options },\n      deleteTagOperationSpec\n    );\n  }\n\n  /**\n   * List manifests of a repository\n   * @param name Name of the image (including the namespace)\n   * @param options The options parameters.\n   */\n  getManifests(\n    name: string,\n    options?: ContainerRegistryGetManifestsOptionalParams\n  ): Promise<ContainerRegistryGetManifestsResponse> {\n    return this.client.sendOperationRequest(\n      { name, options },\n      getManifestsOperationSpec\n    );\n  }\n\n  /**\n   * Get manifest attributes\n   * @param name Name of the image (including the namespace)\n   * @param digest Digest of a BLOB\n   * @param options The options parameters.\n   */\n  getManifestProperties(\n    name: string,\n    digest: string,\n    options?: ContainerRegistryGetManifestPropertiesOptionalParams\n  ): Promise<ContainerRegistryGetManifestPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { name, digest, options },\n      getManifestPropertiesOperationSpec\n    );\n  }\n\n  /**\n   * Update properties of a manifest\n   * @param name Name of the image (including the namespace)\n   * @param digest Digest of a BLOB\n   * @param options The options parameters.\n   */\n  updateManifestProperties(\n    name: string,\n    digest: string,\n    options?: ContainerRegistryUpdateManifestPropertiesOptionalParams\n  ): Promise<ContainerRegistryUpdateManifestPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { name, digest, options },\n      updateManifestPropertiesOperationSpec\n    );\n  }\n\n  /**\n   * GetRepositoriesNext\n   * @param nextLink The nextLink from the previous successful call to the GetRepositories method.\n   * @param options The options parameters.\n   */\n  getRepositoriesNext(\n    nextLink: string,\n    options?: ContainerRegistryGetRepositoriesNextOptionalParams\n  ): Promise<ContainerRegistryGetRepositoriesNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      getRepositoriesNextOperationSpec\n    );\n  }\n\n  /**\n   * GetTagsNext\n   * @param name Name of the image (including the namespace)\n   * @param nextLink The nextLink from the previous successful call to the GetTags method.\n   * @param options The options parameters.\n   */\n  getTagsNext(\n    name: string,\n    nextLink: string,\n    options?: ContainerRegistryGetTagsNextOptionalParams\n  ): Promise<ContainerRegistryGetTagsNextResponse> {\n    return this.client.sendOperationRequest(\n      { name, nextLink, options },\n      getTagsNextOperationSpec\n    );\n  }\n\n  /**\n   * GetManifestsNext\n   * @param name Name of the image (including the namespace)\n   * @param nextLink The nextLink from the previous successful call to the GetManifests method.\n   * @param options The options parameters.\n   */\n  getManifestsNext(\n    name: string,\n    nextLink: string,\n    options?: ContainerRegistryGetManifestsNextOptionalParams\n  ): Promise<ContainerRegistryGetManifestsNextResponse> {\n    return this.client.sendOperationRequest(\n      { name, nextLink, options },\n      getManifestsNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkDockerV2SupportOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getManifestOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/{name}/manifests/{reference}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManifestWrapper\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  urlParameters: [Parameters.url, Parameters.name, Parameters.reference],\n  headerParameters: [Parameters.accept, Parameters.accept1],\n  serializer\n};\nconst createManifestOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/{name}/manifests/{reference}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      bodyMapper: { type: { name: \"any\" } },\n      headersMapper: Mappers.ContainerRegistryCreateManifestHeaders\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  requestBody: Parameters.payload,\n  urlParameters: [Parameters.url, Parameters.name, Parameters.reference],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteManifestOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/{name}/manifests/{reference}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  urlParameters: [Parameters.url, Parameters.name, Parameters.reference],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getRepositoriesOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/_catalog\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Repositories,\n      headersMapper: Mappers.ContainerRegistryGetRepositoriesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [Parameters.last, Parameters.n, Parameters.apiVersion],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerRepositoryProperties\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.url, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteRepositoryOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.url, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updatePropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/{name}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerRepositoryProperties\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  requestBody: Parameters.value,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.url, Parameters.name],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer\n};\nconst getTagsOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/{name}/_tags\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagList,\n      headersMapper: Mappers.ContainerRegistryGetTagsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [\n    Parameters.last,\n    Parameters.n,\n    Parameters.apiVersion,\n    Parameters.orderby,\n    Parameters.digest\n  ],\n  urlParameters: [Parameters.url, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTagPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/{name}/_tags/{reference}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ArtifactTagProperties\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.url, Parameters.name, Parameters.reference],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateTagAttributesOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/{name}/_tags/{reference}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ArtifactTagProperties\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  requestBody: Parameters.value1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.url, Parameters.name, Parameters.reference],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteTagOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/{name}/_tags/{reference}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.url, Parameters.name, Parameters.reference],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getManifestsOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/{name}/_manifests\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AcrManifests,\n      headersMapper: Mappers.ContainerRegistryGetManifestsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [\n    Parameters.last,\n    Parameters.n,\n    Parameters.apiVersion,\n    Parameters.orderby\n  ],\n  urlParameters: [Parameters.url, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getManifestPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/{name}/_manifests/{digest}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ArtifactManifestProperties\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.url, Parameters.name, Parameters.digest1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateManifestPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/acr/v1/{name}/_manifests/{digest}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ArtifactManifestProperties\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  requestBody: Parameters.value2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.url, Parameters.name, Parameters.digest1],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer\n};\nconst getRepositoriesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Repositories,\n      headersMapper: Mappers.ContainerRegistryGetRepositoriesNextHeaders\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [Parameters.last, Parameters.n, Parameters.apiVersion],\n  urlParameters: [Parameters.url, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTagsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagList,\n      headersMapper: Mappers.ContainerRegistryGetTagsNextHeaders\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [\n    Parameters.last,\n    Parameters.n,\n    Parameters.apiVersion,\n    Parameters.orderby,\n    Parameters.digest\n  ],\n  urlParameters: [Parameters.url, Parameters.name, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getManifestsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AcrManifests,\n      headersMapper: Mappers.ContainerRegistryGetManifestsNextHeaders\n    },\n    default: {\n      bodyMapper: Mappers.AcrErrors\n    }\n  },\n  queryParameters: [\n    Parameters.last,\n    Parameters.n,\n    Parameters.apiVersion,\n    Parameters.orderby\n  ],\n  urlParameters: [Parameters.url, Parameters.name, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}